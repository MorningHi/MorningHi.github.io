<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Something for Nothing</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://MorningHi.github.io/"/>
  <updated>2019-08-20T02:27:27.810Z</updated>
  <id>https://MorningHi.github.io/</id>
  
  <author>
    <name>Rezero</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>回环变位(Circular Rotation)</title>
    <link href="https://MorningHi.github.io/2018/08/13/circularRotation/"/>
    <id>https://MorningHi.github.io/2018/08/13/circularRotation/</id>
    <published>2018-08-13T05:21:24.000Z</published>
    <updated>2019-08-20T02:27:27.810Z</updated>
    
    <content type="html"><![CDATA[<p><strong>回环变位</strong>：如果字符串s中的字符循环移动任意位置之后能够得到另一个字符串 t，那么 s 称为 t 的回环变位(Circular Rotation)。例如，”ACTGACG” 就是 “TGACGAC” 的一个回环变位。</p><h3 id="一般的实现思想"><a href="#一般的实现思想" class="headerlink" title="一般的实现思想"></a>一般的实现思想</h3><blockquote><p>利用循环的方式遍历字符串t,从循环次数i处将字符串t分成两个字串后交换顺序拼接成一个新的字符串，比较新的s和新的字符串是否相等。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isCircularRotation1</span><span class="params">(String s, String t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s.length() != t.length())   <span class="comment">//字符串长度不等则没必要再比较，直接返回false</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> N = s.length();</span><br><span class="line">System.out.println(N);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=N; i++)</span><br><span class="line">&#123;</span><br><span class="line">String subT1 = t.substring(<span class="number">0</span>, i);     <span class="comment">//在索引i处分割字符串t</span></span><br><span class="line">String subT2 = t.substring(i, N);</span><br><span class="line"><span class="keyword">if</span>(s.equals(subT2 + subT1))    <span class="comment">//交换顺序连接分割后的字串</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="让代码简单点"><a href="#让代码简单点" class="headerlink" title="让代码简单点"></a>让代码简单点</h3><p>《算法》(Algorithms)这本书的习题中关于回环变位给了这么一行提示：答案只需要一行用到 indexOf()、length() 和字符串连接的代码。</p><blockquote><p>怎么实现呢？——将 t 和 t 自身连接，这样如果 t 是 s 的回环变位，那么s肯定是 “t+t” 的一个子串！</p></blockquote><p>方法如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isCircularRotation</span><span class="params">(String s, String t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (s.length() == t.length()) &amp;&amp; ((t + t).indexOf(s) &gt; <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其中关于字符串对象的方法的具体使用可以参考 javaAPI文档，里面介绍的很详细。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;回环变位&lt;/strong&gt;：如果字符串s中的字符循环移动任意位置之后能够得到另一个字符串 t，那么 s 称为 t 的回环变位(Circular Rotation)。例如，”ACTGACG” 就是 “TGACGAC” 的一个回环变位。&lt;/p&gt;
&lt;h3 id=&quot;
      
    
    </summary>
    
      <category term="Java" scheme="https://MorningHi.github.io/categories/Java/"/>
    
    
      <category term="字符串" scheme="https://MorningHi.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
</feed>
