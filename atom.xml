<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Something for Nothing</title>
  
  <subtitle>just run</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://MorningHi.github.io/"/>
  <updated>2019-05-03T08:34:52.928Z</updated>
  <id>https://MorningHi.github.io/</id>
  
  <author>
    <name>Rezero</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>快速排序算法——python实现</title>
    <link href="https://MorningHi.github.io/2018/05/10/quickSort/"/>
    <id>https://MorningHi.github.io/2018/05/10/quickSort/</id>
    <published>2018-05-10T09:11:36.000Z</published>
    <updated>2019-05-03T08:34:52.928Z</updated>
    
    <content type="html"><![CDATA[<p><strong>快速排序的思想</strong></p><p>首先在数组中任意选取一个数（通常选第一个数）作为标志数据，通过比较将有比它小的数全放到它前面，比它大的数全放到它后面，这样完成一趟排序。</p><p>一趟排序的流程为：</p><ol><li>初始时i=0, j=N-1。其中N为数组长度；</li><li>选择标志数据key，通常设置key = Array[0]；</li><li>从数组尾部向前遍历（j –），找到第一个比key小的数A[j]，交换A[i]和A[j]的位置；</li><li>从数组首部向后遍历（i ++），找到第一个比key大的数A[i]，交换A[i]和A[j]的位置；</li><li>重复步骤3和4直到i=j。</li></ol><p>一趟排序之后标志数据将数组分成了左右两部分，左边的数应当都小于它而右边的数都比它大。再利用递归的思想，对左右两部分分别进行同样的操作，最终实现对数组的排序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#快速排序的递归实现</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quickSort</span><span class="params">(arr, low, high)</span>:</span></span><br><span class="line">    i = low</span><br><span class="line">    j = high</span><br><span class="line">    <span class="keyword">if</span> i &gt;= j:</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    key = arr[i]       <span class="comment">#设置标志数据</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; j:</span><br><span class="line">    <span class="comment">#从尾部向前遍历，找到第一个比key小的数</span></span><br><span class="line">        <span class="keyword">while</span> arr[j] &gt;= key <span class="keyword">and</span> i &lt; j:   </span><br><span class="line">            j = j - <span class="number">1</span></span><br><span class="line">        arr[i] = arr[j] </span><br><span class="line">        <span class="comment">#从首部部向前遍历，找到第一个比key大的数  </span></span><br><span class="line">        <span class="keyword">while</span> arr[i] &lt;= key <span class="keyword">and</span> j &gt; i:</span><br><span class="line">            i = i + <span class="number">1</span></span><br><span class="line">        arr[j] = arr[i]</span><br><span class="line">    arr[i] = key</span><br><span class="line">    <span class="comment">#一轮之后数组分成了左右两部分，用同样的思想分别进行递归</span></span><br><span class="line">    quickSort(arr, low, i<span class="number">-1</span>)</span><br><span class="line">    quickSort(arr, i+<span class="number">1</span>, high)</span><br><span class="line"></span><br><span class="line"><span class="comment">#测试函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    Arr = [<span class="number">7</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">80</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">19</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">23</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">53</span>, <span class="number">27</span>, <span class="number">9</span>, <span class="number">20</span>]</span><br><span class="line">    quickSort(Arr, <span class="number">0</span>, len(Arr) - <span class="number">1</span>)</span><br><span class="line">    print(Arr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    test()</span><br></pre></td></tr></table></figure><p>快速排序算法的平均时间复杂度为O(nlgn)，标志数据的位置选择会影响算法的效率，最坏情况下时间复杂度可能为O(N^2)。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;快速排序的思想&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先在数组中任意选取一个数（通常选第一个数）作为标志数据，通过比较将有比它小的数全放到它前面，比它大的数全放到它后面，这样完成一趟排序。&lt;/p&gt;
&lt;p&gt;一趟排序的流程为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初始时i=0
      
    
    </summary>
    
    
      <category term="python" scheme="https://MorningHi.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>回环变位(Circular Rotation)</title>
    <link href="https://MorningHi.github.io/2017/08/13/circularRotation/"/>
    <id>https://MorningHi.github.io/2017/08/13/circularRotation/</id>
    <published>2017-08-13T05:21:24.000Z</published>
    <updated>2019-05-03T08:34:52.926Z</updated>
    
    <content type="html"><![CDATA[<p><strong>回环变位</strong>：如果字符串s中的字符循环移动任意位置之后能够得到另一个字符串 t，那么 s 称为 t 的回环变位(Circular Rotation)。例如，”ACTGACG” 就是 “TGACGAC” 的一个回环变位。</p><h3 id="一般的实现思想"><a href="#一般的实现思想" class="headerlink" title="一般的实现思想"></a>一般的实现思想</h3><blockquote><p>利用循环的方式遍历字符串t,从循环次数i处将字符串t分成两个字串后交换顺序拼接成一个新的字符串，比较新的s和新的字符串是否相等。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isCircularRotation1</span><span class="params">(String s, String t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s.length() != t.length())   <span class="comment">//字符串长度不等则没必要再比较，直接返回false</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> N = s.length();</span><br><span class="line">System.out.println(N);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=N; i++)</span><br><span class="line">&#123;</span><br><span class="line">String subT1 = t.substring(<span class="number">0</span>, i);     <span class="comment">//在索引i处分割字符串t</span></span><br><span class="line">String subT2 = t.substring(i, N);</span><br><span class="line"><span class="keyword">if</span>(s.equals(subT2 + subT1))    <span class="comment">//交换顺序连接分割后的字串</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="让代码简单点"><a href="#让代码简单点" class="headerlink" title="让代码简单点"></a>让代码简单点</h3><p>《算法》(Algorithms)这本书的习题中关于回环变位给了这么一行提示：答案只需要一行用到 indexOf()、length() 和字符串连接的代码。</p><blockquote><p>怎么实现呢？——将 t 和 t 自身连接，这样如果 t 是 s 的回环变位，那么s肯定是 “t+t” 的一个子串！</p></blockquote><p>方法如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isCircularRotation</span><span class="params">(String s, String t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (s.length() == t.length()) &amp;&amp; ((t + t).indexOf(s) &gt; <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其中关于字符串对象的方法的具体使用可以参考 javaAPI文档，里面介绍的很详细。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;回环变位&lt;/strong&gt;：如果字符串s中的字符循环移动任意位置之后能够得到另一个字符串 t，那么 s 称为 t 的回环变位(Circular Rotation)。例如，”ACTGACG” 就是 “TGACGAC” 的一个回环变位。&lt;/p&gt;
&lt;h3 id=&quot;
      
    
    </summary>
    
    
      <category term="java" scheme="https://MorningHi.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>myChat</title>
    <link href="https://MorningHi.github.io/2017/06/23/myChat/"/>
    <id>https://MorningHi.github.io/2017/06/23/myChat/</id>
    <published>2017-06-23T09:32:35.000Z</published>
    <updated>2019-05-03T08:34:52.927Z</updated>
    
    <content type="html"><![CDATA[<p>一个使用java编写的基于<a href="http://baike.baidu.com/link?url=h_t84oqdxzS4fWhBQb-N3AKA0SN-G0LbTmYu3GZGL9qbigG8tMnSUZFBtQp3YYbBx43fTFm2HucIq_uzYEG08q" target="_blank" rel="noopener">UDP协议</a>简单聊天程序。<br>主要包括四个类：发送类、接收类、GUI和主类。能够实现同一局域网下的两台主机相互聊天。</p><h3 id="程序源代码如下："><a href="#程序源代码如下：" class="headerlink" title="程序源代码如下："></a>程序源代码如下：</h3><h4 id="1-发送类-Sender"><a href="#1-发送类-Sender" class="headerlink" title="1. 发送类(Sender)"></a>1. 发送类(Sender)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zero;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sender</span> <span class="keyword">extends</span> <span class="title">ChatWindow</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> DatagramSocket ds;  <span class="comment">//发送数据包的套接字</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> sendPort;    <span class="comment">//发送端口</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Sender</span><span class="params">(DatagramSocket ds, <span class="keyword">int</span> port, String windowName)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(windowName);</span><br><span class="line">        <span class="keyword">this</span>.ds = ds;</span><br><span class="line">        <span class="keyword">this</span>.sendPort = port;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span>    <span class="comment">//发送线程</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">                myEvent();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_mess</span><span class="params">(String message)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] by = message.getBytes();   <span class="comment">//将消息转换为比特数组</span></span><br><span class="line">            DatagramPacket dp = <span class="keyword">new</span> DatagramPacket(by, by.length, InetAddress.getByName(<span class="string">"127.0.0.1"</span>), sendPort);  <span class="comment">//封装数据包</span></span><br><span class="line">            ds.send(dp);   <span class="comment">//发送数据包 </span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">myEvent</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//窗口点击关闭事件</span></span><br><span class="line">        f.addWindowListener(<span class="keyword">new</span> WindowAdapter()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span></span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                ds.close();    <span class="comment">//关闭服务</span></span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">       </span><br><span class="line">        sendBut.addActionListener(<span class="keyword">new</span> ActionListener()   <span class="comment">//给发送按钮添加事件</span></span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span></span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    String mess = editArea.getText();   <span class="comment">//获取输入聊天消息</span></span><br><span class="line">                    send_mess(mess);</span><br><span class="line">                    chatArea.append(mess+System.getProperty(<span class="string">"line.separator"</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span>(Exception ex)</span><br><span class="line">                &#123;</span><br><span class="line">                    ex.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">finally</span></span><br><span class="line">                &#123;</span><br><span class="line">                    editArea.setText(<span class="keyword">null</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        editArea.addKeyListener(<span class="keyword">new</span> KeyAdapter()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span></span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(e.getKeyCode()==KeyEvent.VK_ENTER)</span><br><span class="line">                    &#123;</span><br><span class="line">                        String mess = editArea.getText();   <span class="comment">//获取输入聊天消息</span></span><br><span class="line">                        send_mess(mess);</span><br><span class="line">                        chatArea.append(mess+System.getProperty(<span class="string">"line.separator"</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span>(Exception ex)</span><br><span class="line">                &#123;</span><br><span class="line">                    ex.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">finally</span></span><br><span class="line">                &#123;</span><br><span class="line">                    editArea.setText(<span class="keyword">null</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-接收类-Receiver"><a href="#2-接收类-Receiver" class="headerlink" title="2. 接收类(Receiver)"></a>2. 接收类(Receiver)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zero;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Receiver</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> DatagramSocket ds;  <span class="comment">//接收数据报的套接字  </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Receiver</span><span class="params">(DatagramSocket ds)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ds = ds;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span>   <span class="comment">//实现run()方法</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="keyword">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                    <span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                    DatagramPacket dp = <span class="keyword">new</span> DatagramPacket(buf, buf.length);   </span><br><span class="line">                    </span><br><span class="line">                    ds.receive(dp); <span class="comment">//接收数据包</span></span><br><span class="line">                    String ip = dp.getAddress().getHostAddress();</span><br><span class="line">                    String mess = <span class="keyword">new</span> String(dp.getData(), <span class="number">0</span>, dp.getLength());</span><br><span class="line">                    ChatWindow.chatArea.append(<span class="string">"From ip:"</span>+ip+<span class="string">",message:"</span>+mess+System.getProperty(<span class="string">"line.separator"</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-GUI界面类"><a href="#3-GUI界面类" class="headerlink" title="3. GUI界面类"></a>3. GUI界面类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zero;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Button;</span><br><span class="line"><span class="keyword">import</span> java.awt.FlowLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.Frame;</span><br><span class="line"><span class="keyword">import</span> java.awt.TextArea;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChatWindow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> Frame f;</span><br><span class="line">    <span class="keyword">protected</span> Button sendBut;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> TextArea editArea, chatArea;</span><br><span class="line">    </span><br><span class="line">    ChatWindow()</span><br><span class="line">    &#123;</span><br><span class="line">        init(<span class="string">"hahahaha"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ChatWindow(String windowName)</span><br><span class="line">    &#123;</span><br><span class="line">        init(windowName);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(String windowName)</span>   <span class="comment">//窗体初始化</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        f = <span class="keyword">new</span> Frame(windowName);</span><br><span class="line">        f.setBounds(<span class="number">300</span>, <span class="number">100</span>, <span class="number">400</span>, <span class="number">500</span>);</span><br><span class="line">        f.setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">        sendBut = <span class="keyword">new</span> Button(<span class="string">"send"</span>);</span><br><span class="line">        editArea = <span class="keyword">new</span> TextArea(<span class="number">8</span>, <span class="number">50</span>);</span><br><span class="line">        chatArea = <span class="keyword">new</span> TextArea(<span class="number">16</span>, <span class="number">50</span>);</span><br><span class="line">        chatArea.setEditable(<span class="keyword">false</span>);     <span class="comment">//chatArea为聊天消息显示区，不可编辑</span></span><br><span class="line">        </span><br><span class="line">        f.add(chatArea);         <span class="comment">//添加组件</span></span><br><span class="line">        f.add(editArea);</span><br><span class="line">        f.add(sendBut);</span><br><span class="line">        </span><br><span class="line">        f.setVisible(<span class="keyword">true</span>);    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-主类-ChatDemo"><a href="#4-主类-ChatDemo" class="headerlink" title="4. 主类(ChatDemo)"></a>4. 主类(ChatDemo)</h4><p>说明：ChatDemo类只是一端的聊天程序，是基于多线程的程序，发送和接收个占用一个线程。要实现聊天只需要在局域网中的另一台设备上再启动一个主类并且修改相应的ip地址以及端口号即可。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zero;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChatDemo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="comment">//new ChatWindow("chatwindow1");</span></span><br><span class="line">        </span><br><span class="line">        DatagramSocket sendSocket = <span class="keyword">new</span> DatagramSocket();</span><br><span class="line">        DatagramSocket receiveSocket = <span class="keyword">new</span> DatagramSocket(<span class="number">10000</span>);  <span class="comment">//监听端口号</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Sender(sendSocket, <span class="number">10001</span>, <span class="string">"Chatwindow of A"</span>)).start();   <span class="comment">//启动发送线程，10001为发送端口号</span></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Receiver(receiveSocket)).start();  <span class="comment">//启动接收线程</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这个程序比较简单，我也省略了线程同步的步骤。另外只能在同一个局域网下的两台设备上运行，至于为什么不能在不同局域网间通信这个问题涉及到网络映射等问题，才学疏浅的我现在还不能给出解决，很遗憾。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一个使用java编写的基于&lt;a href=&quot;http://baike.baidu.com/link?url=h_t84oqdxzS4fWhBQb-N3AKA0SN-G0LbTmYu3GZGL9qbigG8tMnSUZFBtQp3YYbBx43fTFm2HucIq_uzYEG
      
    
    </summary>
    
    
      <category term="java" scheme="https://MorningHi.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>北国的秋</title>
    <link href="https://MorningHi.github.io/2017/06/13/myfirst-blog/"/>
    <id>https://MorningHi.github.io/2017/06/13/myfirst-blog/</id>
    <published>2017-06-13T14:24:30.000Z</published>
    <updated>2019-05-03T08:34:52.928Z</updated>
    
    <content type="html"><![CDATA[<h3 id="假装我是一个北方人"><a href="#假装我是一个北方人" class="headerlink" title="假装我是一个北方人"></a>假装我是一个北方人</h3><p>北国的秋似乎不太礼貌<br>没给世界半点预告<br>就迫不及待地撞进夏的余温里</p><p>天边的阳光少了一丝热烈<br>或许是它不太喜欢这个季节<br>于是我发现——<br>它离地平线又近了一点<br>都不顾身边几片云朵对它的留恋<br>因为，在那遥远天边<br>还有晚霞同他做伴<br>让它即使离开云朵也不会觉得孤单</p><p>桌上的咖啡还腾着热气<br>但总感觉缺了一首乐曲<br>突然意识到——<br>昨天窗外树荫中的格外聒噪<br>原来是它们告别的郑重宣告<br>但是，昨晚入梦前<br>分明还分明还和蟋蟀的长谈遇见<br>不知今晚<br>还会不会听到一句再见</p><p>窗角的梧桐叶泛了点黄<br>将要为这个季节换身新装<br>我想它清楚——<br>下面柏油马路才是自己最后的归宿<br>可那又如何？<br>即使离开也得秀出飘逸的舞步<br>好来迎接那阵轻风的吻度<br>“嘘——<br>我的舞会将要落下帷幕”</p><p>北国的秋似乎不太礼貌<br>那漫天夕阳还未褪去<br>它就迫不及待地撞进夏的余温里……</p><p>Rezero 2015.9</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;假装我是一个北方人&quot;&gt;&lt;a href=&quot;#假装我是一个北方人&quot; class=&quot;headerlink&quot; title=&quot;假装我是一个北方人&quot;&gt;&lt;/a&gt;假装我是一个北方人&lt;/h3&gt;&lt;p&gt;北国的秋似乎不太礼貌&lt;br&gt;没给世界半点预告&lt;br&gt;就迫不及待地撞进夏的余温里&lt;/p
      
    
    </summary>
    
    
      <category term="故事和酒" scheme="https://MorningHi.github.io/tags/%E6%95%85%E4%BA%8B%E5%92%8C%E9%85%92/"/>
    
  </entry>
  
</feed>
